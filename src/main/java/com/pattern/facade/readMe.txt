外观模式（门面模式）的定义:为子系统的一组接口提供一个一致的界面，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。


产生背景：一个系统都是由各种大大小小不同功能的类组成的，每一个类都会提供被外部调用的接口，我们可以通过这些接口去使用这些类，
但是客户端要一个个的去调用这些类非常的麻烦，而且也会造成客户类与子系统类耦合性高的问题

解决方案：所以为了解决这种问题，我们需要定义一个高层接口，让这个高层接口去完成各个子系统类接口的调用，客户类就只需要对这个高层接口进行调用即可，
这样降低了客户类与子系统类的耦合，也能让客户端更加方便的使用这个系统，这就是外观模式



何时使用外观模式：

至于何时使用外观模式，可以分为三个阶段来说：

1.首先在设计初期阶段，应该要有意识的将不同的两个层分离，比如经典的三层架构，就需要考虑在数据访问和业务逻辑层、业务逻辑层和表示层的层与层之间建立外观接口Facade，
  这样可以为每一层复杂的子系统提供一个简单的接口，不仅使得耦合大大降低，也让外部调用更简单。

2.其次，在开发阶段，子系统往往因为不断的重构演化而变化得越来越复杂，大多数的模式使用时也都会产生很多很小的类，这本是好事，但也会给外部调用它们的用户带来了使用上的困难，
  增加外观Facade可以提供一个简单的接口，减少它们之间的依赖。

3.第三，在维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展了，但因为它包含非常重要的功能，新的需求开发必须要依赖它，此时用外观模式也是非常适合的。
  你可以为新系统开发一个外观Facade类，来为这个设计粗糙或高度复杂的遗留代码提供一个比较清晰简单的接口，让新系统与Facade对象交互，Facade对象则与遗留代码交互所有复杂的工作。